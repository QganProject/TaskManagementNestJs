{"version":3,"sources":["components/ErrorMessage.js","pages/signin/SignInPage.js","pages/signup/SignUpPage.js","components/Task.js","components/TasksFilters.js","pages/tasks/TasksPage.js","pages/create-task/CreateTaskPage.js","App.js","serviceWorker.js","services/base-http.service.js","services/tasks.service.js","stores/tasks.store.js","stores/user.store.js","services/auth.service.js","index.js"],"names":["ErrorContainer","styled","div","ErrorHeading","h1","ErrorList","ul","ErrorMessage","renderMessageArray","errors","constraints","map","constraint","idx","message","this","props","Array","isArray","Component","Heading","FormContainer","FormField","TextField","SignInPage","inject","submit","a","setState","errorMessage","state","username","password","userStore","signin","window","location","hash","response","data","goToSignUp","errorMesssage","className","id","label","margin","variant","onChange","e","target","value","type","Button","style","marginBottom","fullWidth","color","onClick","SignUpPage","signup","CardContainer","CardTitle","Task","deleteTask","tasksStore","handleStatusChange","updateTaskStatus","title","description","Card","CardContent","CardActions","padding","disableSpacing","Grid","justify","container","item","FormControl","width","Select","status","displayEmpty","MenuItem","IconButton","FiltersContainer","ControlContainer","TasksFilters","filters$","Subject","syncFilters","search","next","handleStatusFilterChange","handleSearchTermChange","filters","pipe","debounceTime","subscribe","updateFilters","placeholder","InputProps","startAdornment","InputAdornment","position","TasksWrapper","TasksHeader","Title","CreateButtonContainer","TasksContainer","EmptyTasksPlaceholder","p","SignOutIconContainer","TasksPage","observer","handleSignOut","signout","resetTasks","renderTasks","tasks","length","task","fetchTasks","Fab","FormWrapper","CreateTaskPage","handleSubmitTask","createTask","multiline","rows","marginTop","App","exact","path","component","Boolean","hostname","match","BaseHttpService","routerStore","BASE_URL","process","_accessToken","endpoint","options","Object","assign","_getCommonOptions","axios","get","catch","error","_handleHttpError","post","delete","patch","statusCode","_handle401","token","loadToken","headers","Authorization","accessToken","localStorage","setItem","getItem","removeItem","TasksService","queryObj","queryStr","queryString","stringify","TasksStore","tasksService","result","push","findIndex","splice","find","observable","action","UserStore","authService","removeToken","AuthService","saveToken","services","stores","RouterStore","browserHistory","createBrowserHistory","history","syncHistoryWithStore","Root","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a911add6.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nconst ErrorContainer = styled.div`\n  width: 100%;\n  padding: 8px 16px;\n  background-color: #f7c5c0;\n  color: #a51809;\n  box-sizing: border-box;\n  margin-bottom: 10px;\n`;\n\nconst ErrorHeading = styled.h1`\n  font-size: 18px;\n  margin: 10px 0;\n`;\n\nconst ErrorList = styled.ul`\n  padding-left: 20px;\n`;\n\nexport default class ErrorMessage extends Component {\n  renderMessageArray = errors => {\n    const constraints = errors.map((constraint, idx) => <li key={idx}>{constraint}</li>);\n \n    return <ErrorList>{constraints}</ErrorList>;\n  };\n \n  render() {\n    const { message } = this.props;\n \n    return (\n      <ErrorContainer>\n        <ErrorHeading>Oops!</ErrorHeading>\n        {Array.isArray(message) ? this.renderMessageArray(message) : <p>{message}</p>}\n      </ErrorContainer>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Button, TextField } from '@material-ui/core';\nimport styled from 'styled-components';\n\nimport './SignInPage.scss';\nimport { inject } from 'mobx-react';\nimport ErrorMessage from '../../components/ErrorMessage';\n\nconst Heading = styled.h1`\n  margin-top: 0;\n`;\n\nconst FormContainer = styled.div`\n  max-width: 480px;\n  width: 100%;\n  background-color: #edf4ff;\n  padding: 30px;\n  border-radius: 5px;\n`;\n\nconst FormField = styled(TextField)`\n  width: 100%;\n`;\n\n@inject('userStore', 'routerStore')\nclass SignInPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      errorMesssage: null,\n    };\n  }\n\n  submit = async () => {\n    this.setState({ errorMessage: null });\n    const { username, password } = this.state;\n\n    try {\n      await this.props.userStore.signin(username, password);\n      window.location.hash = '/tasks';\n    } catch (error) {\n      const errorMessage = error.response.data.message;\n      this.setState({ errorMessage });\n    }\n  };\n\n  goToSignUp = () => {\n    window.location.hash = '/signup';\n  };\n\n  render() {\n    const { errorMessage } = this.state;\n\n    return (\n      <div className=\"fullscreen-wrapper\">\n        <FormContainer>\n          <Heading>Hello!</Heading>\n          <p>Fill in your username and password to sign in.</p>\n          \n          {errorMessage && <ErrorMessage message={this.state.errorMessage} />}\n\n          <div>\n            <FormField\n              id=\"outlined-name\"\n              label=\"Username\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              onChange={e => this.setState({ username: e.target.value })}\n            />\n          </div>\n          <div>\n            <FormField\n              id=\"outlined-name\"\n              label=\"Password\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              type=\"password\"\n              onChange={e => this.setState({ password: e.target.value })}\n            />\n          </div>\n          <hr/>\n          <div>\n            <Button\n              style={{ marginBottom: '10px' }}\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={this.submit}\n            >\n              SIGN IN\n            </Button>\n\n            <Button fullWidth onClick={this.goToSignUp}>\n              Don't have an account? Sign up now!\n            </Button>\n          </div>\n        </FormContainer>\n      </div>\n    );\n  }\n}\n\nexport default SignInPage;\n","import React, { Component } from 'react';\nimport { Button, TextField } from '@material-ui/core';\nimport styled from 'styled-components';\n\nimport './SignUpPage.scss';\nimport { inject } from 'mobx-react';\nimport ErrorMessage from '../../components/ErrorMessage';\n\nconst Heading = styled.h1`\n  margin-top: 0;\n`;\n\nconst FormContainer = styled.div`\n  max-width: 480px;\n  width: 100%;\n  background-color: #edf4ff;\n  padding: 30px;\n  border-radius: 5px;\n`;\n\nconst FormField = styled(TextField)`\n  width: 100%;\n`;\n\n@inject('userStore', 'routerStore')\nclass SignUpPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      errorMessage: null,\n    };\n  }\n\n  submit = async () => {\n    const { username, password } = this.state;\n\n    try {\n      await this.props.userStore.signup(username, password);\n      window.location.hash = '/signin';\n    } catch (error) {\n      const errorMessage = error.response.data.message;\n      this.setState({ errorMessage });\n    }\n  };\n\n  render() {\n    const { errorMessage } = this.state;\n\n    return (\n      <div className=\"fullscreen-wrapper\">\n        <FormContainer>\n          <Heading>Join us!</Heading>\n          <p>Start managing tasks easily.</p>\n\n          {errorMessage && <ErrorMessage message={this.state.errorMessage} />}\n\n          <div>\n            <FormField\n              id=\"outlined-name\"\n              label=\"Username\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              onChange={e => this.setState({ username: e.target.value })}\n            />\n          </div>\n          <div>\n            <FormField\n              id=\"outlined-name\"\n              label=\"Password\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              type=\"password\"\n              onChange={e => this.setState({ password: e.target.value })}\n            />\n          </div>\n          <p>\n            Passwords must contain at least 1 upper case letter, 1 lower case letter and one number OR special charracter.\n          </p>\n          <hr/>\n          <div>\n            <Button\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={this.submit}\n            >\n              SIGN UP\n            </Button>\n          </div>\n        </FormContainer>\n      </div>\n    );\n  }\n}\n\nexport default SignUpPage;\n","import React, { Component } from 'react';\nimport {\n  Card,\n  CardContent,\n  CardActions,\n  IconButton,\n  MenuItem,\n  Select,\n  FormControl,\n  Grid\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport styled from 'styled-components';\nimport { inject } from 'mobx-react';\n\nconst CardContainer = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst CardTitle = styled.h1`\n  margin: 8px 0;\n  font-size: 22px;\n`;\n\n@inject('tasksStore')\nclass Task extends Component {\n  deleteTask = () => {\n    this.props.tasksStore.deleteTask(this.props.id);\n  };\n\n  handleStatusChange = e => {\n    this.props.tasksStore.updateTaskStatus(this.props.id, e.target.value);\n  };\n\n  render() {\n    const { title, description } = this.props;\n\n    return (\n      <CardContainer>\n        <Card>\n          <CardContent>\n            <CardTitle>{title}</CardTitle>\n            {description}\n          </CardContent>\n          <CardActions style={{ padding: '14px' }} disableSpacing>\n            <Grid\n              justify=\"space-between\" // Add it here :)\n              container \n            >\n              <Grid item>\n                <FormControl style={{ width: '140px' }}>\n                  <Select\n                    value={this.props.status}\n                    onChange={this.handleStatusChange}\n                    displayEmpty\n                  >\n                    <MenuItem value={'OPEN'}>Open</MenuItem>\n                    <MenuItem value={'IN_PROGRESS'}>In Progress</MenuItem>\n                    <MenuItem value={'DONE'}>Done</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n\n              <Grid item>\n                <IconButton onClick={this.deleteTask}>\n                  <DeleteIcon color=\"error\" />\n                </IconButton>\n              </Grid>\n            </Grid>\n          </CardActions>\n        </Card>\n      </CardContainer>\n    );\n  }\n}\n\nexport default Task;\n","import React, { Component } from 'react';\nimport { Grid, FormControl, Select, MenuItem, TextField, InputAdornment } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport styled from 'styled-components';\nimport { inject } from 'mobx-react';\nimport { Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nconst FiltersContainer = styled.div`\n  margin-top: 20px;\n`;\n\nconst ControlContainer = styled.div`\n  background-color: #c0cde0;\n  border-radius: 5px;\n  padding: 10px;\n`;\n\n@inject('tasksStore')\nclass TasksFilters extends Component {\n  filters$ = new Subject();\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      status: props.tasksStore.filters.status,\n      search: props.tasksStore.filters.search,\n    };\n\n    this.filters$\n      .pipe(\n        debounceTime(500),\n      )\n      .subscribe(filters => {\n        props.tasksStore.updateFilters(filters);\n      });\n  }\n\n  syncFilters = () => {\n    const { status, search } = this.state;\n    this.filters$.next({ status, search });\n  }\n\n  handleStatusFilterChange = e => {\n    const status = e.target.value;\n    this.setState({ status }, this.syncFilters);\n  };\n\n  handleSearchTermChange = e => {\n    const search = e.target.value;\n    this.setState({ search }, this.syncFilters);\n  }\n\n  render() {\n    return (\n      <FiltersContainer>\n        <Grid\n          justify=\"space-between\" // Add it here :)\n          container\n        >\n          <Grid item>\n            <ControlContainer>\n              <FormControl style={{ width: '220px' }}>\n                <TextField\n                  placeholder=\"Search...\"\n                  value={this.state.search}\n                  onChange={this.handleSearchTermChange}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <SearchIcon />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </FormControl>\n            </ControlContainer>\n          </Grid>\n\n          <Grid item>\n            <ControlContainer>\n              <FormControl style={{ width: '220px' }}>\n                <Select\n                  value={this.state.status}\n                  onChange={this.handleStatusFilterChange}\n                  displayEmpty\n                >\n                  <MenuItem value=\"\">No status filter</MenuItem>\n                  <MenuItem value={'OPEN'}>Open</MenuItem>\n                  <MenuItem value={'IN_PROGRESS'}>In Progress</MenuItem>\n                  <MenuItem value={'DONE'}>Done</MenuItem>\n                </Select>\n              </FormControl>\n            </ControlContainer>\n          </Grid>\n        </Grid>\n      </FiltersContainer>\n    );\n  }\n}\n\nexport default TasksFilters;\n","import React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { Fab, IconButton } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport SignOutIcon from '@material-ui/icons/ExitToApp'\nimport styled from 'styled-components';\nimport Task from '../../components/Task';\nimport TasksFilters from '../../components/TasksFilters';\n\nconst TasksWrapper = styled.div`\n  width: 100%;\n  max-width: 860px;\n  margin: auto;\n  padding: 20px;\n  box-sizing: border-box;\n`;\n\nconst TasksHeader = styled.div`\n  display: flex;\n  justify-content: center;\n  border-bottom: 3px solid #757c87;\n`;\n\nconst Title = styled.h1`\n  width: 100%;\n  color: #edf4ff;\n`;\n\nconst CreateButtonContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst TasksContainer = styled.div`\n  padding-top: 20px;\n`;\n\nconst EmptyTasksPlaceholder = styled.p`\n  color: #edf4ff;\n  text-align: center;\n  font-size: 22px;\n`;\n\nconst SignOutIconContainer = styled.div`\n  margin-left: 10px;\n  \n  .signOutIcon {\n    fill: #edf4ff;\n  }\n`;\n\n@inject('tasksStore', 'routerStore', 'userStore')\n@observer\nclass TasksPage extends Component {\n  componentDidMount() {\n    this.props.tasksStore.fetchTasks();\n  }\n  \n  handleSignOut = () => {\n    const { userStore, tasksStore } = this.props;\n    userStore.signout();\n    tasksStore.resetTasks();\n    window.location.hash = '/signin';\n  };\n\n  renderTasks = () => {\n    const { tasksStore } = this.props;\n\n    if (!tasksStore.tasks.length) {\n      return <EmptyTasksPlaceholder>No tasks available. Create one?</EmptyTasksPlaceholder>\n    }\n\n    return tasksStore.tasks.map(task => (\n      <Task\n        key={task.id}\n        id={task.id}\n        title={task.title}\n        description={task.description}\n        status={task.status}\n      />\n    ));\n  };\n\n  render() {\n    return (\n      <TasksWrapper>\n        <TasksHeader>\n          <Title>Get things done.</Title>\n\n          <CreateButtonContainer>\n            <Fab\n              variant=\"extended\"\n              onClick={() => { window.location.hash = '/tasks/create'; }}\n            >\n              <AddIcon />\n              Create Task\n            </Fab>\n\n            <SignOutIconContainer>\n              <IconButton onClick={this.handleSignOut}>\n                <SignOutIcon className=\"signOutIcon\" />\n              </IconButton>\n            </SignOutIconContainer>\n          </CreateButtonContainer>\n        </TasksHeader>\n\n        <TasksFilters />\n\n        <TasksContainer>\n          {this.renderTasks()}\n        </TasksContainer>\n      </TasksWrapper>\n    );\n  }\n}\n\nexport default TasksPage;\n","import React, { Component } from 'react';\nimport { TextField, FormControl, Button } from '@material-ui/core';\nimport styled from 'styled-components';\nimport { inject } from 'mobx-react';\nimport ErrorMessage from '../../components/ErrorMessage';\n\nconst FormWrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst FormContainer = styled.div`\n  max-width: 480px;\n  width: 100%;\n  background-color: #edf4ff;\n  padding: 30px;\n  border-radius: 5px;\n`;\n\n@inject('tasksStore', 'routerStore')\nclass CreateTaskPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title: '',\n      description: '',\n      errorMessage: null,\n    };\n  }\n\n  handleSubmitTask = async () => {\n    const { tasksStore } = this.props;\n    const { title, description } = this.state;\n\n    try {\n      await tasksStore.createTask(title, description);\n      window.location.hash = '/tasks';\n    } catch (error) {\n      const errorMessage = error.response.data.message;\n      this.setState({ errorMessage });\n    }\n  };\n\n  render() {\n    return (\n      <FormWrapper>\n        <FormContainer>\n          <h1>Create a new task</h1>\n          <p>Provide information about the task you wish to complete.</p>\n\n          { this.state.errorMessage && <ErrorMessage message={this.state.errorMessage} />}\n\n          <FormControl fullWidth>\n            <TextField\n              label=\"Title\"\n              placeholder=\"Title\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              onChange={e => this.setState({ title: e.target.value })}\n            />\n          </FormControl>\n          <FormControl fullWidth>\n            <TextField\n              label=\"Description\"\n              placeholder=\"Description\"\n              multiline\n              rows=\"8\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              onChange={e => this.setState({ description: e.target.value })}\n            />\n          </FormControl>\n\n          <Button\n            style={{ marginTop: '10px' }}\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={this.handleSubmitTask}\n          >\n            CREATE TASK\n          </Button>\n        </FormContainer>\n      </FormWrapper>\n    );\n  }\n}\n\nexport default CreateTaskPage;\n","import React, { Component, Fragment } from 'react';\nimport { Route } from 'react-router-dom';\nimport { inject, observer } from 'mobx-react';\n\nimport SignInPage from './pages/signin/SignInPage';\nimport SignUpPage from './pages/signup/SignUpPage';\nimport TasksPage from './pages/tasks/TasksPage';\nimport CreateTaskPage from './pages/create-task/CreateTaskPage';\n\n@inject('routerStore')\n@observer\nclass App extends Component {\n  render() {\n    return (\n      <Fragment>\n        <Route exact path=\"/\" component={SignInPage} />\n        <Route path=\"/signin/\" component={SignInPage} />\n        <Route path=\"/signup/\" component={SignUpPage} />\n        <Route exact path=\"/tasks\" component={TasksPage} />\n        <Route exact path=\"/tasks/create\" component={CreateTaskPage} />\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import axios from 'axios';\n\nexport default class BaseHttpService {\n  BASE_URL = process.env.REACT_APP_BASE_URL || 'http://localhost:3000';\n  _accessToken = null;\n\n  constructor(routerStore) {\n    this.routerStore = routerStore;\n  }\n\n  async get(endpoint, options = {}) {\n    Object.assign(options, this._getCommonOptions());\n    return axios.get(`${this.BASE_URL}/${endpoint}`, options)\n      .catch(error => this._handleHttpError(error));\n  }\n\n  async post(endpoint, data = {}, options = {}) {\n    Object.assign(options, this._getCommonOptions());\n    return axios.post(`${this.BASE_URL}/${endpoint}`, data, options)\n      .catch(error => this._handleHttpError(error));  \n  }\n\n  async delete(endpoint, options = {}) {\n    Object.assign(options, this._getCommonOptions());\n    return axios.delete(`${this.BASE_URL}/${endpoint}`, options)\n      .catch(error => this._handleHttpError(error));     \n  }\n\n  async patch(endpoint, data = {}, options = {}) {\n    Object.assign(options, this._getCommonOptions());\n    return axios.patch(`${this.BASE_URL}/${endpoint}`, data, options)\n      .catch(error => this._handleHttpError(error));   \n  }\n\n  _handleHttpError(error) {\n    const { statusCode } = error.response.data;\n\n    if (statusCode !== 401) {\n      throw error;\n    } else {\n      return this._handle401();\n    }\n  }\n\n  _handle401() {\n    window.location.hash = '/signin';\n  }\n\n  _getCommonOptions() {\n    const token = this.loadToken();\n\n    return {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n  }\n\n  get accessToken() {\n    return this._accessToken ? this._accessToken : this.loadToken();\n  }\n\n  saveToken(accessToken) {\n    this._accessToken = accessToken;\n    return localStorage.setItem('accessToken', accessToken);\n  }\n\n  loadToken() {\n    const token = localStorage.getItem('accessToken');\n    this._accessToken = token;\n    return token;\n  }\n\n  removeToken() {\n    localStorage.removeItem('accessToken');\n  }\n}\n","import BaseHttpService from './base-http.service';\nimport queryString from 'query-string';\n\nexport default class TasksService extends BaseHttpService {\n  fetchTasks({ status, search}) {\n    const queryObj = {};\n\n    if (status.length) {\n      queryObj.status = status;\n    }\n\n    if (search.length) {\n      queryObj.search = search;\n    }\n\n    const queryStr = queryString.stringify(queryObj);\n    return this.get('tasks' + (queryStr ? `?${queryStr}` : ''));\n  }\n\n  async deleteTask(id) {\n    await this.delete(`tasks/${id}`);\n  }\n\n  updateTaskStatus(id, status) {\n    return this.patch(`tasks/${id}/status`, { status });\n  }\n\n  createTask(title, description) {\n    return this.post(`tasks`, { title, description });\n  }\n}\n","import { observable, action } from 'mobx';\n\nexport default class TasksStore {\n  @observable tasks = [];\n  @observable filters = { status: '', search: '' };\n\n  constructor(tasksService) {\n    this.tasksService = tasksService;\n  }\n\n  updateFilters({ status, search }) {\n    this.filters.status = status;\n    this.filters.search = search;\n    this.fetchTasks();\n  }\n\n  @action\n  resetTasks() {\n    this.tasks = [];\n  }\n\n  @action\n  async fetchTasks() {\n    const result = await this.tasksService.fetchTasks(this.filters);\n\n    if (result) {\n      this.tasks = result.data;\n    }\n  }\n\n  @action\n  async createTask(title, description) {\n    const result = await this.tasksService.createTask(title, description);\n\n    if (result) {\n      this.tasks.push(result.data);\n    }\n  }\n\n  @action\n  async deleteTask(id) {\n    const idx = this.tasks.findIndex(task => task.id === id);\n    await this.tasksService.deleteTask(id);\n    this.tasks.splice(idx, 1);\n  }\n\n  @action\n  async updateTaskStatus(id, status) {\n    const task = this.tasks.find(task => task.id === id);\n    await this.tasksService.updateTaskStatus(id, status);\n    task.status = status;\n  }\n}\n","import { observable, action } from 'mobx';\n\nexport default class UserStore {\n  @observable username = null;\n\n  constructor(authService) {\n    this.authService = authService;\n  }\n\n  @action\n  async signin(username, password) {\n    this.username = await this.authService.signin(username, password);\n  }\n\n  @action\n  async signup(username, password) {\n    return this.authService.signup(username, password);\n  }\n\n  @action\n  signout() {\n    this.username = null;\n    this.authService.removeToken();\n  }\n}\n","import { post } from 'axios';\nimport BaseHttpService from './base-http.service';\n\nexport default class AuthService extends BaseHttpService {\n  async signin(username, password) {\n    const result = await post(`${this.BASE_URL}/auth/signin`, { username, password });\n    const accessToken = result.data.accessToken;\n    this.saveToken(accessToken);\n    return result.data.username;\n  }\n\n  async signup(username, password) {\n    await post(`${this.BASE_URL}/auth/signup`, { username, password });\n  }\n\n  async signout() {\n    this.removeToken();\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'mobx-react';\nimport { createBrowserHistory } from 'history';\nimport { RouterStore, syncHistoryWithStore } from 'mobx-react-router';\nimport { HashRouter } from 'react-router-dom';\n\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport TasksService from './services/tasks.service';\nimport TasksStore from './stores/tasks.store';\nimport UserStore from './stores/user.store';\nimport AuthService from './services/auth.service';\n\n\nconst services = {};\nconst stores = {};\n\nstores.routerStore = new RouterStore();\nconst browserHistory = createBrowserHistory();\nconst history = syncHistoryWithStore(browserHistory, stores.routerStore);\n\nservices.tasksService = new TasksService(stores.routerStore);\nservices.authService = new AuthService();\n\nstores.tasksStore = new TasksStore(services.tasksService);\nstores.userStore = new UserStore(services.authService);\n\nconst Root = (\n  <Provider {...stores}>\n    <HashRouter history={history}>\n      <App />\n    </HashRouter>\n  </Provider>\n);\nReactDOM.render(Root, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}